DROP SCHEMA IF EXISTS bumsoftdb;
CREATE SCHEMA IF NOT EXISTS bumsoftdb;
SET SCHEMA bumsoftdb;

CREATE TABLE IF NOT EXISTS BUMSOFT_USER (
 BS_USR_ID LONG NOT NULL,
 BS_USR_FIRST_NAME VARCHAR(250),
 BS_USR_LAST_NAME VARCHAR(250),
 BS_USR_EMAIL VARCHAR(250),
 BS_USR_PASSWORD VARCHAR(250),
 BS_USR_ENABLED BOOLEAN,
 BS_USR_CREATED_AT DATE,
 BS_USR_UPDATED_AT DATE,
 BS_USR_DELETED_AT DATE
);


CREATE TABLE IF NOT EXISTS ROLE (
 ROLE_ID LONG NOT NULL,
 ROLE_NAME VARCHAR(250) NOT NULL,
 ROLE_DESC VARCHAR(250)
);


CREATE TABLE IF NOT EXISTS USER_ROLE (
 BS_USR_ID LONG NOT NULL,
 ROLE_ID LONG NOT NULL
);

CREATE TABLE IF NOT EXISTS OPERATION (
 OP_ID LONG NOT NULL,
 OP_NAME VARCHAR(250),
 OP_DESC VARCHAR(250)
);

CREATE TABLE IF NOT EXISTS ROLE_OPERATION (
 ROLE_ID LONG NOT NULL,
 OP_ID LONG NOT NULL
);

CREATE TABLE IF NOT EXISTS ACCOUNT (
  ACC_ID LONG NOT NULL,
  ACC_NAME VARCHAR(250),
  ACC_DESC VARCHAR(250),
  ACC_BS_USR_ID VARCHAR(250),
  ACC_REF_TYPE_ID VARCHAR(250),
  ACC_CREATED_AT DATE,
  ACC_UPDATED_AT DATE,
  ACC_DELETED_AT DATE
);


CREATE TABLE IF NOT EXISTS TRANSACTION (
TRX_ID LONG NOT NULL,
TRX_VALUE DECIMAL(18,2),
TRX_DESC VARCHAR(250),
TRX_DATE DATE,
TRX_ACC_ID VARCHAR(250),
TRX_INC_STMT_ID VARCHAR(250),
TRX_REF_TYP_ID VARCHAR(250)
);

CREATE TABLE IF NOT EXISTS REFERENCE_ENTITY_TYPE (
REF_TYP_ID LONG NOT NULL,
REF_TYP_GROUP VARCHAR(250),
REF_TYP_NAME VARCHAR(250),
REF_TYP_DESC VARCHAR(250)
);

CREATE TABLE IF NOT EXISTS SUBSCRIPTION (
 SUBS_ID LONG NOT NULL,
 SUBS_CREATED_AT DATE NOT NULL,
 SUBS_UPDATED_AT DATE,
 SUBS_DELETED_AT DATE,
 SUBS_AUTO_RENEWAL BOOLEAN,
 SUBS_START_DT DATE,
 SUBS_END_DT DATE,
 SUBS_PRICE DECIMAL(18,2),
 SUBS_REF_TYP_ID VARCHAR(250),
 SUBS_BS_USR_ID VARCHAR(250)
);

CREATE TABLE IF NOT EXISTS INCOME_STATEMENT (
 INC_STMT_ID LONG NOT NULL,
 INC_STMT_NAME VARCHAR(250),
 INC_EXPECTED_AMOUNT DECIMAL(18,2),
 INC_STMT_REF_TYP_ID VARCHAR(250),
 INC_BS_USR_ID VARCHAR(250),
 INC_CREATED_AT DATE,
 INC_UPDATED_AT DATE,
 INC_DELETED_AT DATE
);

CREATE TABLE IF NOT EXISTS PAYMENT_INFO (
 PI_ID LONG NOT NULL,
 PI_SUBSCRIPTION_PRICE DECIMAL(18,2) NOT NULL,
 PI_CREATED_AT DATE,
 PI_UPDATED_AT DATE,
 PI_DELETED_AT DATE,
 PI_SUBS_ID VARCHAR(250),
 PI_CC_ID VARCHAR(250)
);


CREATE TABLE IF NOT EXISTS CREDIT_CARD_INFO (
 CC_ID LONG NOT NULL,
 CC_OWNER_FULL_NAME VARCHAR(250),
 CC_NUMBER VARCHAR(250),
 CC_EXPIRATION_DT DATE,
 CC_CVV_NUMBER VARCHAR(250),
 CC_CREATED_AT DATE,
 CC_UPDATED_AT DATE,
 CC_DELETED_AT DATE,
 CC_BS_USR_ID VARCHAR(250)
);

-- CONSTRAINTS
ALTER TABLE BUMSOFT_USER ADD CONSTRAINT PK_BS_USR_BS_USR_ID PRIMARY KEY (BS_USR_ID);
ALTER TABLE BUMSOFT_USER ADD CONSTRAINT UQ_BS_USR_BS_USR_EMAIL UNIQUE (BS_USR_EMAIL);
ALTER TABLE BUMSOFT_USER ADD CONSTRAINT UQ_BS_USR_BS_USR_PASSWD UNIQUE (BS_USR_PASSWORD);

ALTER TABLE ROLE ADD CONSTRAINT PK_ROLE_ROLE_ID PRIMARY KEY (ROLE_ID);
ALTER TABLE ROLE ADD CONSTRAINT UQ_ROLE_ROLE_NAME UNIQUE (ROLE_NAME);

ALTER TABLE USER_ROLE ADD CONSTRAINT PK_USER_ROLE_BS_USR_ID_ROLE_ID PRIMARY KEY (BS_USR_ID, ROLE_ID);
ALTER TABLE USER_ROLE ADD CONSTRAINT FK_USER_ROLE_BS_USR_ID FOREIGN KEY (BS_USR_ID) REFERENCES BUMSOFT_USER (BS_USR_ID);
ALTER TABLE USER_ROLE ADD CONSTRAINT FK_USER_ROLE_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID);


ALTER TABLE OPERATION ADD CONSTRAINT PK_OP_OP_ID PRIMARY KEY (OP_ID);
ALTER TABLE OPERATION ADD CONSTRAINT UQ_OP_OP_NAME UNIQUE (OP_NAME);

ALTER TABLE ROLE_OPERATION ADD CONSTRAINT PK_ROLE_OPERATION_ROLE_ID_OP_ID PRIMARY KEY (ROLE_ID, OP_ID);
ALTER TABLE ROLE_OPERATION ADD CONSTRAINT FK_ROLE_OPERATION_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID);
ALTER TABLE ROLE_OPERATION ADD CONSTRAINT FK_ROLE_OPERATION_OP_ID FOREIGN KEY (OP_ID) REFERENCES OPERATION (OP_ID);

ALTER TABLE ACCOUNT ADD CONSTRAINT PK_ACC_ACC_ID PRIMARY KEY (ACC_ID);
ALTER TABLE ACCOUNT ADD CONSTRAINT FK_ACC_ACC_BS_USR_ID FOREIGN KEY (ACC_BS_USR_ID) REFERENCES BUMSOFT_USER(BS_USR_ID);
ALTER TABLE ACCOUNT ADD CONSTRAINT FK_ACC_ACC_REF_TYPE_ID FOREIGN KEY (ACC_REF_TYPE_ID) REFERENCES REFERENCE_ENTITY_TYPE(REF_TYP_ID);

ALTER TABLE TRANSACTION ADD CONSTRAINT PK_TRX_TRX_ID PRIMARY KEY (TRX_ID);
ALTER TABLE TRANSACTION ADD CONSTRAINT FK_TRX_TRX_INC_STMT_ID FOREIGN KEY (TRX_INC_STMT_ID) REFERENCES INCOME_STATEMENT(INC_STMT_ID);
ALTER TABLE TRANSACTION ADD CONSTRAINT FK_TRX_TRX_REF_TYP_ID FOREIGN KEY (TRX_REF_TYP_ID) REFERENCES REFERENCE_ENTITY_TYPE(REF_TYP_ID);

ALTER TABLE REFERENCE_ENTITY_TYPE ADD CONSTRAINT PK_REF_REF_TYP_ID PRIMARY KEY (REF_TYP_ID);

ALTER TABLE SUBSCRIPTION ADD CONSTRAINT PK_SUBS_SUBS_ID PRIMARY KEY (SUBS_ID);
ALTER TABLE SUBSCRIPTION ADD CONSTRAINT FK_SUBS_SUBS_REF_TYP_ID FOREIGN KEY (SUBS_REF_TYP_ID) REFERENCES REFERENCE_ENTITY_TYPE(REF_TYP_ID);
ALTER TABLE SUBSCRIPTION ADD CONSTRAINT FK_SUBS_SUBS_BS_USR_ID FOREIGN KEY (SUBS_BS_USR_ID) REFERENCES BUMSOFT_USER(BS_USR_ID);

ALTER TABLE INCOME_STATEMENT ADD CONSTRAINT PK_INC_INC_STMT_ID PRIMARY KEY (INC_STMT_ID);
ALTER TABLE INCOME_STATEMENT ADD CONSTRAINT FK_INC_INC_STMT_REF_TYP_ID FOREIGN KEY (INC_STMT_REF_TYP_ID) REFERENCES REFERENCE_ENTITY_TYPE(REF_TYP_ID);
ALTER TABLE INCOME_STATEMENT ADD CONSTRAINT FK_INC_INC_BS_USR_ID FOREIGN KEY (INC_BS_USR_ID) REFERENCES BUMSOFT_USER(BS_USR_ID);

ALTER TABLE PAYMENT_INFO ADD CONSTRAINT PK_PI_PI_ID PRIMARY KEY (PI_ID);
ALTER TABLE PAYMENT_INFO ADD CONSTRAINT FK_PI_PI_SUBS_ID FOREIGN KEY (PI_SUBS_ID) REFERENCES SUBSCRIPTION(SUBS_ID);
ALTER TABLE PAYMENT_INFO ADD CONSTRAINT FK_PI_PI_CC_ID FOREIGN KEY (PI_CC_ID) REFERENCES CREDIT_CARD_INFO(CC_ID);

ALTER TABLE CREDIT_CARD_INFO ADD CONSTRAINT PK_CC_CC_ID PRIMARY KEY (CC_ID);
ALTER TABLE CREDIT_CARD_INFO ADD CONSTRAINT FK_CC_CC_BS_USR_ID FOREIGN KEY (CC_BS_USR_ID) REFERENCES BUMSOFT_USER (BS_USR_ID);
